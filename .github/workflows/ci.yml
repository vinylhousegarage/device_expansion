name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14.13
        env:
          POSTGRES_DB: ${{ secrets.CI_TEST_DB }}
          POSTGRES_USER: ${{ secrets.CI_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.CI_POSTGRES_PASSWORD }}
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.CI_POSTGRES_USER }}" \
          -h ${{ secrets.CI_POSTGRES_HOST }} \
          --timeout=10 \
          --dbname=${{ secrets.CI_TEST_DB }} \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 10

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2

      - name: Cache gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}--gems

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      - name: Set up the database
        run: |
          if psql -h ${{ secrets.CI_POSTGRES_HOST }} \
          -U ${{ secrets.CI_POSTGRES_USER }} -lqt \
          | cut -d \| -f 1 \
          | grep -qw ${{ secrets.CI_POSTGRES_DB }}; then
            echo "Database exist, running migrations"
            bundle exec rails db:migrate
          else
            echo "Database does not exist, creating database"
            bundle exec rails db:create
            echo "Running migrations"
            bundle exec rails db:migrate
            echo "Inserting seed data"
            bundle exec rails db:seed
          fi

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build . -t ghcr.io/vinylhousegarage/device_expansion:${{ github.sha }}
          docker push ghcr.io/vinylhousegarage/device_expansion:${{ github.sha }}

      - name: Run tests
        run: |
          bundle exec rails test

      - name: Run RuboCop (Lint check)
        run: |
          bundle exec rubocop --fail-level C

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Trigger Render Deployment
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache":false}' \
          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
