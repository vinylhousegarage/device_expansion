name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:14
        env:
          TEST_DB: postgres_db
          TEST_USER: ${{ secrets.POSTGRES_USER }}
          TEST_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      # コードのチェックアウト
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Docker Buildx のセットアップ
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Dockerイメージをビルド
      - name: Build Docker Image with Compose
        run: docker compose build

      # Dockerイメージ一覧を表示
      - name: List Docker Images
        run: docker images

      # GHCR にログイン
      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # GHCRから最新のイメージをプル
      - name: Pull latest image from GHCR
        run: docker pull ghcr.io/vinylhousegarage/device_expansion:latest || echo "No cached image found."

      # Dockerイメージと GHCRからプルしたイメージのハッシュを比較
      # 差分があれ ばDockerイメージを GHCR にプッシュ
      - name: Compare and Push Docker Image if Different
        run: |
          temp_hash=$(docker inspect --format='{{.Id}}' device_expansion-web)
          ghcr_hash=$(docker inspect --format='{{.Id}}' ghcr.io/vinylhousegarage/device_expansion:latest || echo "")

          echo "Temp Image Hash: $temp_hash"
          echo "GHCR Image Hash: $ghcr_hash"

          if [ "$temp_hash" != "$ghcr_hash" ]; then
            echo "Images differ. Proceeding to tag and push."
            docker tag device_expansion-web ghcr.io/vinylhousegarage/device_expansion:latest
            docker push ghcr.io/vinylhousegarage/device_expansion:latest
          else
            echo "Images are identical. No push needed."
          fi

      # Rubyをセットアップ
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.0

      # Gemのキャッシュを利用
      - name: Cache gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-v1
          restore-keys: |
            ${{ runner.os }}-gems-v1

      # 依存関係のインストール
      - name: Install dependencies
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      # bin/rails に実行権限を付与
      - name: Grant execute permission to bin/rails
        run: chmod +x bin/rails

      # 環境変数を設定
      - name: Set environment variables
        run: |
          export TEST_USER=${{ secrets.POSTGRES_USER }}
          export TEST_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}

      # データベースのセットアップ
      - name: Run database setup
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:create
          bin/rails db:migrate
          bin/rails db:seed

      # マイグレーション履歴を確認
      - name: Check applied migrations
        run: |
          echo "Checking applied migrations..."
          bin/rails db:migrate:status

      # テストを実行
      - name: Run tests
        env:
          RAILS_ENV: test
        run: bin/rails test
